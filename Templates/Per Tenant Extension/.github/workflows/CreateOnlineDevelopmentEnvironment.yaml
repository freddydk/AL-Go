name: ' Create Online Dev. Environment'

on:
  workflow_dispatch:
    inputs:
      environmentName:
        description: Name of the online environment
        required: true
      reUseExistingEnvironment:
        description: Reuse environment if it exists
        required: false
        default: 'N'
      directCommit:
        description: Direct COMMIT (Y/N)
        required: false
        default: 'N'

run-name: Create Online Dev. Environment - open for manual interaction

permissions:
  contents: write
  pull-requests: write

defaults:
  run:
    shell: powershell

env:
  ALGoOrgSettings: ${{ vars.ALGoOrgSettings }}
  ALGoRepoSettings: ${{ vars.ALGoRepoSettings }}

jobs:
  Authenticate:
    runs-on: [ windows-latest ]
    outputs:
      adminCenterApiCredentials: ${{ steps.authenticate.outputs.adminCenterApiCredentials }}
      telemetryScopeJson: ${{ steps.init.outputs.telemetryScopeJson }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Initialize the workflow
        id: init
        uses: microsoft/AL-Go-Actions/WorkflowInitialize@main
        with:
          shell: powershell
          eventId: "DO0093"

      - name: Read settings
        uses: microsoft/AL-Go-Actions/ReadSettings@main
        with:
          shell: powershell
          parentTelemetryScopeJson: ${{ steps.init.outputs.telemetryScopeJson }}

      - name: Read secrets
        uses: microsoft/AL-Go-Actions/ReadSecrets@main
        env:
          secrets: ${{ toJson(secrets) }}
        with:
          shell: powershell
          parentTelemetryScopeJson: ${{ steps.init.outputs.telemetryScopeJson }}
          settingsJson: ${{ env.Settings }}
          secrets: 'adminCenterApiCredentials'

      - name: Check AdminCenterApiCredentials / Initiate Device Login (open to see code)
        id: authenticate
        run: |
          $ErrorActionPreference = "STOP"
          Set-StrictMode -version 2.0
          $adminCenterApiCredentials = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($env:adminCenterApiCredentials))
          if ($adminCenterApiCredentials) {
            Write-Host "AdminCenterApiCredentials provided!"
            Add-Content -Path $env:GITHUB_OUTPUT -Value "adminCenterApiCredentials=$([Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes($adminCenterApiCredentials)))"
          }
          else {
            Write-Host "AdminCenterApiCredentials not provided, initiating Device Code flow"
            $ALGoHelperPath = "$([System.IO.Path]::GetTempFileName()).ps1"
            $webClient = New-Object System.Net.WebClient
            $webClient.DownloadFile('https://raw.githubusercontent.com/freddydk/AL-Go-Actions/main/AL-Go-Helper.ps1', $ALGoHelperPath)
            . $ALGoHelperPath
            $BcContainerHelperPath = DownloadAndImportBcContainerHelper -baseFolder $ENV:GITHUB_WORKSPACE
            $authContext = New-BcAuthContext -includeDeviceLogin -deviceLoginTimeout ([TimeSpan]::FromSeconds(0))
            $adminCenterApiCredentials = "{""deviceCode"":""$($authContext.deviceCode)""}"
            Add-Content -Path $env:GITHUB_OUTPUT -Value "adminCenterApiCredentials=$([Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes($adminCenterApiCredentials)))"
            CleanupAfterBcContainerHelper -bcContainerHelperPath $bcContainerHelperPath
            Set-Content -Path $ENV:GITHUB_STEP_SUMMARY -value $authContext.message
          }

  CreateDevelopmentEnvironment:
    runs-on: [ windows-latest ]
    name: Create Development Environment
    needs: [ Authenticate ]
    env:
      adminCenterApiCredentials: ${{ needs.Authenticate.outputs.adminCenterApiCredentials }}
    steps:
      - name: Create Development Environment
        uses: microsoft/AL-Go-Actions/CreateDevelopmentEnvironment@main
        with:
          shell: powershell
          parentTelemetryScopeJson: ${{ needs.Authenticate.outputs.telemetryScopeJson }}
          environmentName: ${{ github.event.inputs.environmentName }}
          reUseExistingEnvironment: ${{ github.event.inputs.reUseExistingEnvironment }}
          directCommit: ${{ github.event.inputs.directCommit }}
          adminCenterApiCredentials: ${{ env.adminCenterApiCredentials }} 

      - name: Finalize the workflow
        if: always()
        uses: microsoft/AL-Go-Actions/WorkflowPostProcess@main
        with:
          shell: powershell
          eventId: "DO0093"
          telemetryScopeJson: ${{ needs.Authenticate.outputs.telemetryScopeJson }}
